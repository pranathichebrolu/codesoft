# -*- coding: utf-8 -*-
"""titanic prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a5VXzIrl640nL7G0imCoCTcseKrDOBsi
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load the Titanic dataset
titanic_df = pd.read_csv("/content/Titanic-Dataset.csv")

# Display the first few rows of the dataset
print(titanic_df.head())

# Data Preprocessing
# Handle missing values
titanic_df.dropna(subset=['Age', 'Embarked'], inplace=True)  # Drop rows with missing Age or Embarked
titanic_df['Cabin'].fillna('Unknown', inplace=True)  # Fill missing Cabin values with 'Unknown'

# Encode categorical variables
titanic_df['Sex'] = titanic_df['Sex'].map({'male': 0, 'female': 1})  # Encode gender as numeric
titanic_df = pd.get_dummies(titanic_df, columns=['Embarked'])  # One-hot encode Embarked column

# Feature selection
features = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Embarked_C', 'Embarked_Q', 'Embarked_S']
X = titanic_df[features]
y = titanic_df['Survived']

# Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Random Forest Classifier model
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = rf_model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy:.2f}")
print("Classification Report:\n", report)



